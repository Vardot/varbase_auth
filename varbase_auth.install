<?php

/**
 * @file
 * Install, update and uninstall functions for the varbase auth module.
 */

use Symfony\Component\Yaml\Yaml;
use Drupal\Core\Config;
use Drupal\Core\Config\InstallStorage;
use Drupal\Core\Config\StorageInterface;
use Drupal\Core\Config\ExtensionInstallStorage;
use Drupal\Core\Config\FileStorage;

/**
 * Implements hook_install().
 */
function varbase_auth_install() {

  $module_name = preg_replace('/_install$/', '', __FUNCTION__);
  $module_path = Drupal::service('module_handler')->getModule($module_name)->getPath();

  // Processer for install: in [$module_name].info.yml file.
  // ---------------------------------------------------------------------------
  $module_info_file = $module_path . '/'. $module_name . '.info.yml';
  if (file_exists($module_info_file)) {
    $module_info_data = (array) Yaml::parse(file_get_contents($module_info_file));
    if (isset($module_info_data['install'])
      && is_array($module_info_data['install'])) {
      \Drupal::service('module_installer')->install($module_info_data['install'], TRUE);
    }
  }

  // Install optional configs.
  $optional_install_path = $module_path . '/' . InstallStorage::CONFIG_OPTIONAL_DIRECTORY;
  if (is_dir($optional_install_path)) {
    $config_installer = \Drupal::service('config.installer');
    $config_installer->installDefaultConfig('module', $module_name);
    // Install any optional config the module provides.
    $storage = new FileStorage($optional_install_path, StorageInterface::DEFAULT_COLLECTION);
    $config_installer->installOptionalConfig($storage, '');
  }
  // ---------------------------------------------------------------------------

  // Install some additional modules for social auth.
  $configFactory = \Drupal::configFactory()->getEditable('simple.settings');
  $auth_modules = $configFactory->get('social_auth_type');

  if (isset($auth_modules) && is_array($auth_modules) && count($auth_modules) > 0) {
    
    $modules_to_install = [];
    foreach ($auth_modules as $auth_module_index => $auth_module) {
      if (is_string($auth_module)) {
        array_push($modules_to_install, $auth_module);
      }
    }

    if (isset($modules_to_install) && is_array($modules_to_install) && count($modules_to_install) > 0) {
      \Drupal::service('module_installer')->install($modules_to_install);
    }
  }
}
