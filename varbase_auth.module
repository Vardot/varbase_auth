<?php

/**
 * @file
 * Contains varbase_auth.module.
 */

// Include all helpers.
include_once __DIR__ . '/includes/helpers.inc';

/**
 * Implements hook_preprocess_page().
 */
function varbase_auth_preprocess_page(&$variables) {

  $current_rout = \Drupal::routeMatch()->getRouteName();

  $current_rout = (string) $current_rout;

  if ($current_rout == 'user.register' ||
      $current_rout == 'user.login') {
    // Get list of enabled modules.
    $modules_list = \Drupal::service('module_handler')->getModuleList();

    // Check if at least one social auth module is enabled.
    $we_do_have_enabled_social_auth_modules = FALSE;
    foreach ($modules_list as $module_index => $module_value) {
      $module_index = (string) $module_index;
      if (substr_count($module_index, 'social_auth_') > 0) {
        $we_do_have_enabled_social_auth_modules = TRUE;
        break;
      }
    }

    // Add variables to template.
    varbase_auth__add_template_variable($variables, [
      'we_do_have_enabled_social_auth_modules' => [
        'type' => 'bool',
        'value' => $we_do_have_enabled_social_auth_modules,
      ],
    ]);
  }
}

/**
 * Implements hook_preprocess_login_with().
 */
function varbase_auth_preprocess_login_with(&$variables) {

  if (\Drupal::moduleHandler()->moduleExists('social_auth')) {
    foreach ($variables['social_networks'] as $social_network_index => $social_network) {
      if (isset($social_network['img_path'])) {
        $module_path = Drupal::service('module_handler')->getModule('varbase_auth')->getPath();

        $replaced_path_for_icons = str_replace('modules/contrib', 'social_auth', $social_network['img_path']);
        $social_network_img_path_in_vartheme = $module_path . '/images/' . $replaced_path_for_icons;

        if (file_exists(DRUPAL_ROOT . '/' . $social_network_img_path_in_vartheme)) {
          $variables['social_networks'][$social_network_index]['img_path'] = $social_network_img_path_in_vartheme;
        }
      }
    }
  }

}

/**
 * Implements hook_library_info_alter().
 */
function varbase_auth_library_info_alter(&$libraries, $extension) {
  if ($extension === 'social_auth'
    && isset($libraries['auth-icons'])
    && \Drupal::service('theme.manager')->getActiveTheme()->getName() == 'gin') {

    unset($libraries['auth-icons']['css']);
    $libraries['auth-icons']['dependencies'][] = 'varbase_auth/auth-icons';
  }
}

/**
 * Implements hook_theme().
 */
function varbase_auth_theme($existing, $type, $theme, $path) {
  return [
    'block_social_auth_html' => [
      'template' => 'block--social-auth.html',
      'variables' => [
        'attributes' => [],
        'children' => [],
      ],
      'path' => $path . '/templates',
    ],
    'login_with' => [
      'template' => 'login-with',
      'variables' => [
        'attributes' => [],
        'children' => [],
      ],
      'path' => $path . '/templates',
    ],
  ];
}